#ifndef NABLA_COMPILED_PACKAGE_HPP
#define NABLA_COMPILED_PACKAGE_HPP

#include "CompilerError.hpp"

#include <stdint.h>
#include <string>
#include <vector>

namespace NABLA 
{
    //! \brief A package containing resulting information of a compilation sequence
    class CompiledPackage
    {
    public:
        //! \brief Construct a compiled package
        CompiledPackage();

        //! \brief Deconstruct a compiled package
        ~CompiledPackage();

        //! \brief Check if there is an error
        //! \retval True if error, False otherwise
        bool isErrorPresent() const;

        //! \brief Get the generated byte code
        //! \returns Vector of bytecode
        std::vector<uint8_t> getByteCode() const;

    protected:

        //! \brief Set the byte code 
        //! \param bytecode The bytecode to set 
        void setByteCode(std::vector<uint8_t> bytecode);

        //! \brief Clear the bytecode
        //! \post The package's bytecode will be cleared
        void clearByteCode();

        //! \brief Add an error to the package
        //! \param error The error that has occured
        void addError(CompilerError error);
    
    private:
        bool hasError;
        std::vector<uint8_t> resulting_bytecode;

        std::vector<CompilerError> error_objects;
    };
}

#endif 